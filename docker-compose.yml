# docker-compose.yml
services:
  # PostgreSQL Database with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: quantpulse-postgres
    environment:
      POSTGRES_DB: quantpulse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-quantpulse123}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quantpulse-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and task queue)
  redis:
    image: redis:7-alpine
    container_name: quantpulse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quantpulse-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quantpulse-backend
    env_file:
      - .env
    environment:
      # Override specific values for Docker environment
      - DB_URL=postgresql+psycopg2://postgres:${DB_PASSWORD:-quantpulse123}@postgres:5432/quantpulse
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quantpulse-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: quantpulse-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - quantpulse-network
    restart: unless-stopped

  # Nginx (Production reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: quantpulse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - quantpulse-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

networks:
  quantpulse-network:
    driver: bridge
